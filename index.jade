doctype
-
	url = {
		howmuchreadScript: 'https://raw.githubusercontent.com/hakatashi/jquery.howmuchread/master/dist/jquery.howmuchread.min.js',
		bower: 'http://bower.io/',
		jquery: 'https://jquery.com/download/',
		binarySearch: 'https://www.topcoder.com/community/data-science/data-science-tutorials/binary-search/',
		MIT: 'http://opensource.org/licenses/MIT',
		contributing: 'https://github.com/hakatashi/jquery.howmuchread/blob/master/contributing.md',
	}
html
	head
		meta(charset='utf-8')
		title jQuery.howmuchread - How many characters I scrolled?
		link(href='http://cdnjs.cloudflare.com/ajax/libs/normalize/3.0.3/normalize.min.css', rel='stylesheet')
		link(href='http://fonts.googleapis.com/css?family=Droid+Sans|Oswald', rel='stylesheet')
		link(href='http://cdnjs.cloudflare.com/ajax/libs/github-fork-ribbon-css/0.1.1/gh-fork-ribbon.min.css', rel='stylesheet')
		script(src='https://code.jquery.com/jquery-1.11.3.min.js')
		script(src='dist/jquery.howmuchread.js')
		script.
			$(document).ready(function () {
				$(window).scroll(function () {
					var metrics = $('.bodytext').howmuchread({
						parent: window,
						borderline: 'scroll',
						baseline: 'after',
						getMetric: true
					});
					$('.counter').text(metrics.position);
					if (metrics.top === null) {
						$('.marker').hide()
					} else {
						$('.marker').show()
						$('.marker').css({
							top: metrics.top + metrics.blockSize * 0.7 - $('.marker').height(),
							right: metrics.right + metrics.inlineSize + 10
						});
					}
				}).scroll();
				$(window).resize(function () {
					$('.label').css({
						left: $('.bodytext').offset().left + $('.bodytext').width() + 20,
					});
				}).resize();
			});
		style.
			body {
				color: #555;
				font-family: 'Droid Sans', sans-serif;
				padding-bottom: 300px;
			}
			a {
				text-decoration: none;
				color: cornflowerblue;
			}
			pre {
				background-color: darkcyan;
				color: white;
				display: block;
				padding: 18px;
				border-radius: 5px;
			}
			h2, h3, h4, h5, h6 {
				font-family: 'Oswald', sans-serif;
				color: #555;
			}
			h2 {
				margin: 40px 0 15px;
				font-size: 30px;
			}
			h3 {
				font-size: 24px;
			}
			h4 {
				font-size: 20px;
			}
			dt {
				font-family: 'Oswald', sans-serif;
				font-size: 18px;
				margin: 20px 0 5px;
			}
			dd {
				margin: 10px 0 0 50px;
			}
			.label {
				position: fixed;
				left: 100%;
				top: 100px;
				font: 20px 'Oswald', sans-serif;
			}
			.counter {
				font-size: xx-large;
			}
			.marker {
				position: absolute;
				padding: 5px;
				color: white;
				border-radius: 5px;
				font: 16px 'Oswald', sans-serif;
			}
			.bodytext {
				width: 600px;
				margin: 0 auto;
			}
			header h1 {
				font: 70px 'Oswald', sans-serif;
				text-align: center;
				margin: 30px 0;
			}
			header h1 strong {
				font-weight: normal;
				color: cadetblue;
			}
			header p {
				font: 30px 'Oswald', sans-serif;
				text-align: center;
			}
			.badges {
				height: 28px;
				text-align: center;
			}
			.badge {
				margin: 2px;
			}
			.arrow_box {
				background: #d52b2b;
			}
			.arrow_box:after {
				left: 100%;
				top: 50%;
				border: solid transparent;
				content: " ";
				height: 0;
				width: 0;
				position: absolute;
				pointer-events: none;
				border-color: rgba(213, 43, 43, 0);
				border-left-color: #d52b2b;
				border-width: 5px;
				margin-top: -5px;
			}
			footer {
				margin-top: 100px;
				text-align: center;
				font: 30px 'Oswald', sans-serif;
			}
			footer strong {
				font-weight: normal;
				color: cadetblue;
			}
	body
		.github-fork-ribbon-wrapper.right
			.github-fork-ribbon
				a(href='https://github.com/hakatashi/jquery.howmuchread') Fork me on GitHub
		.label
			span.counter-before You've read
			div.counter 0
			span.counter-after characters!
		.marker.arrow_box You're reading here.
		.bodytext
			header
				h1 jQuery.how<strong>much</strong>read
				p Answers your fancy questions such as<br>“How many characters I scrolled?”
				div.badges
					a.badge(href='https://travis-ci.org/hakatashi/jquery.howmuchread')
						img(src='https://travis-ci.org/hakatashi/jquery.howmuchread.svg?branch=master')
					a.badge(href='http://bower.io/search/?q=jquery.howmuchread')
						img(src='https://img.shields.io/bower/v/jquery.howmuchread.svg')
					a.badge(href='https://coveralls.io/r/hakatashi/jquery.howmuchread')
						img(src='https://coveralls.io/repos/hakatashi/jquery.howmuchread/badge.svg')

			a(href='#overview')
				h2#overview Overview
			p.
				Have you ever been in the situation that you need to know the characters you
				scrolled, or to scroll into the place of specific character?
				<strong>jQuery.howmuchread is here for you!</strong>
			p.
				<strong>jQuery.howmuchread</strong> is a fancy jQuery plugin that plays with “scrolling”
				and “counting characters.” It can serve as a great reading counter (as its name implies),
				reading position indicator or somewhat neat page scroller!
			p.
				<strong>jQuery.howmuchread</strong> is powered by the power of the powerful
				<a href="#{url.binarySearch}">binary search algorithm</a>, so you can find
				the character of the specific position precisely, and also very quickly.

			a(href='#feature')
				h2#feature Feature
			ul
				li Fully customizable options
				li RTL &amp; Vertical writing-modes are supported

			a(href='#getting-started')
				h2#getting-started Getitng Started
			p
				a(href=url.howmuchreadScript) Download
				|  the script and include it, along with <a href="#{url.jquery}">jQuery</a>.
			pre.
				&lt;script src="path/to/jquery.min.js"&gt;&lt;/script&gt;
				&lt;script src="path/to/jquery.howmuchread.min.js"&gt;&lt;/script&gt;
				&lt;script&gt;
					$('article').howmuchread();
				&lt;/script&gt;
			p <a href="#{url.bower}">Bower</a> components are also available.
			pre $ bower install jquery.howmuchread

			a(href='#demo')
				h2#demo Demo
			p.
				As you may noticed, whole this page is a demonstration of
				this plugin.

			a(href='#api')
				h2#api API

			a(href='#api-howmuchread')
				h3#api-howmuchread .howmuchread([options])
			p.
				Get the count of characters you scrolled, indicated by the scroll position of the element.
			h4 Options
			p Options have to be passed as object, and following keys are available.
			dl
				dt parent
				dd.
					(Default: self element) The element or anything that can be passed to jQuery object
					that will be the basis of scrolling.
					In other word, parent element is your “scroll area” of the target element.

				dt borderline
				dd.
					(Default: 'before') String or number that determines the position where to be
					guessed as scrolled.
				dd.
					If set to 'before', character will be guessed as scrolled when it completely
					passes the scroll area over.
				dd.
					If set to 'center', character will be guessed as scrolled when it passes the
					center line of the scroll area.
				dd.
					If set to 'after', character will be guessed as scrolled when it appears in
					the scroll area.
				dd.
					If set to 'scroll', character will be guessed as scrolled by the scroll ratio of
					the parent element. (See this page's demo)
				dd.
					If set to number, character will be guessed as scrolled when it passes the
					line of the ratio you specified. (If set to 0, it's equivalent to 'before'.)

				dt baseline
				dd.
					(Default: 'before') String or number that determines the position of the character
					where the character is guessed as scrolled.
				dd.
					If set to 'before', character will be guessed as scrolled when its top line
					passes the borderline over.
				dd.
					If set to 'center', character will be guessed as scrolled when its center line
					passes the borderline over.
				dd.
					If set to 'after', character will be guessed as scrolled when its bottom line
					passes the borderline over.
				dd.
					If set to number, character will be guessed as scrolled when its line of the
					ratio you specified from the top line. (If set to 0, it's equivalent to 'before'.)

				dt wrapperId
				dd.
					(Default: 'howmuchread-wrapper') The string used for the id of the wrapper element.
					jQuery.howmuchread wraps some characters to test their position, and unwraps it
					immediately. Just set this parameter to avoid id conflict with your existing webpage.

				dt getMetric
				dd
					| (Default: false) The boolean. If set to true, instead of returning the count
					| of characters, this method returns the metric information of the first character
					| guessed as “not scrolled”.
					| Returned object at least contains following information.
					dl
						dt top
						dd Distance from the top of the document
						dt left
						dd Distance from the left of the document
						dt right
						dd Distance from the right of the document
						dt bottom
						dd Distance from the bottom of the document
						dt width
						dd Width of the character
						dt height
						dd Height of the character
						dt position
						dd The count of characters which is normaly returned by the method
			h4 Example
			pre.
				// used in this page
				var metrics = $('.bodytext').howmuchread({
					parent: window,
					borderline: 'scroll',
					baseline: 'after',
					getMetric: true
				});

			a(href='#api-howmuchread-getlength')
				h3#api-howmuchread-getlength .howmuchread('getLength')
			p Returns the element's full character count which is compatible with jQuery.howmuchread()

			a(href='#api-howmuchread-scrollto')
				h3#api-howmuchread-scrollto .howmuchread('scrollTo', count[, options])
			p Scroll the parent element to the count-th character exists.
			h4 Options
			p The same options with .howmuchread() and some additionals are available.
			dl
				dt noScroll
				dd.
					(Default: false) Set true not to actually perform scroll, just simulate.
					Much like good if combined with getMetric option.
			h4 Example
			pre.
				// Scroll window to the 1000th character of the document
				$('body').howmuchread('scrollTo', 1000, {
					parent: window
				});

			a(href='#license')
				h2#license License
			p <a href="#{url.MIT}">MIT License</a> &copy; Koki Takahashi
			p Any contributions are <a href="#{url.contributing}">very welcomed</a>!

			footer
				p Thank you for reading <strong>much</strong>!
